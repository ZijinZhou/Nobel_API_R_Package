}
if(org == FALSE){
gender <- gendertest
}else{
if(orgnization){
gender <- rbind(gendertest,o)
}
}
gender
}
get_nobel_gender(y = "2012",org = FALSE)
get_nobel_gender <- function(y = NULL, c = NULL, org = TRUE){
gendertest <- get_nobel_info(y, c)%>%
dplyr::count(gender)
female <- any(gendertest$gender=="female")!=TRUE
male <- any(gendertest$gender=="male")!=TRUE
orgnization <- any(gendertest$gender=="org")!=TRUE
f <- c("female",0)
m <- c("male",0)
o <- c("org",0)
if(female){
gendertest <- rbind(f,gendertest)
}
if(male){
gendertest <- rbind(gendertest,m)
}
if(org == FALSE){
gender <- dplyr::select(gendertest,female,male)
}else{
if(orgnization){
gender <- rbind(gendertest,o)
}
}
gender
}
get_nobel_gender(y = "2012",org = FALSE)
get_nobel_gender <- function(y = NULL, c = NULL, org = TRUE){
gendertest <- get_nobel_info(y, c)%>%
dplyr::count(gender)
female <- any(gendertest$gender=="female")!=TRUE
male <- any(gendertest$gender=="male")!=TRUE
orgnization <- any(gendertest$gender=="org")!=TRUE
f <- c("female",0)
m <- c("male",0)
o <- c("org",0)
if(female){
gendertest <- rbind(f,gendertest)
}
if(male){
gendertest <- rbind(gendertest,m)
}
if(org == FALSE){
gender <- dplyr::filter(gendertest,gender == "female"|gender = "male")
get_nobel_gender <- function(y = NULL, c = NULL, org = TRUE){
gendertest <- get_nobel_info(y, c)%>%
dplyr::count(gender)
female <- any(gendertest$gender=="female")!=TRUE
male <- any(gendertest$gender=="male")!=TRUE
orgnization <- any(gendertest$gender=="org")!=TRUE
f <- c("female",0)
m <- c("male",0)
o <- c("org",0)
if(female){
gendertest <- rbind(f,gendertest)
}
if(male){
gendertest <- rbind(gendertest,m)
}
if(org == FALSE){
gender <- dplyr::filter(gendertest,gender == "female"|gender == "male")
}else{
if(orgnization){
gender <- rbind(gendertest,o)
}
}
gender
}
get_nobel_gender(y = "2012",org = FALSE)
get_nobel_gender(y = "2012",org = FALSE)
get_nobel_gender(y = "1966",org = FALSE)
get_nobel_gender(y = "1966",org = FALSE)
get_nobel_gender(c = "physics")
get_nobel_gender(c = "physics")
get_nobel_gender <- function(y = NULL, c = NULL, org = TRUE){
gendertest <- get_nobel_info(y, c)%>%
dplyr::count(gender)
female <- any(gendertest$gender=="female")!=TRUE
male <- any(gendertest$gender=="male")!=TRUE
orgnization <- any(gendertest$gender=="org")!=TRUE
f <- c("female",0)
m <- c("male",0)
o <- c("org",0)
if(female){
gendertest <- rbind(f,gendertest)
}
if(male){
gendertest <- rbind(gendertest,m)
}
if(org == FALSE){
gender <- dplyr::filter(gendertest,gender == "female"|gender == "male")
}else{
if(orgnization=TRUE){
get_nobel_gender <- function(y = NULL, c = NULL, org = TRUE){
gendertest <- get_nobel_info(y, c)%>%
dplyr::count(gender)
female <- any(gendertest$gender=="female")!=TRUE
male <- any(gendertest$gender=="male")!=TRUE
orgnization <- any(gendertest$gender=="org")!=TRUE
f <- c("female",0)
m <- c("male",0)
o <- c("org",0)
if(female){
gendertest <- rbind(f,gendertest)
}
if(male){
gendertest <- rbind(gendertest,m)
}
if(org == FALSE){
gender <- dplyr::filter(gendertest,gender == "female"|gender == "male")
}else{
if(orgnization==TRUE){
gender <- rbind(gendertest,o)
}
}
gender
}
get_nobel_gender(c = "physics")
get_nobel_gender(c = "physics")
get_nobel_gender <- function(y = NULL, c = NULL, org = TRUE){
gendertest <- get_nobel_info(y, c)%>%
dplyr::count(gender)
female <- any(gendertest$gender=="female")!=TRUE
male <- any(gendertest$gender=="male")!=TRUE
orgnization <- any(gendertest$gender=="org")!=TRUE
f <- c("female",0)
m <- c("male",0)
o <- c("org",0)
if(female){
gendertest <- rbind(f,gendertest)
}
if(male){
gendertest <- rbind(gendertest,m)
}
gender
}
get_nobel_gender(c = "physics")
get_nobel_gender(c = "physics")
get_nobel_gender <- function(y = NULL, c = NULL, org = TRUE){
gendertest <- get_nobel_info(y, c)%>%
dplyr::count(gender)
female <- any(gendertest$gender=="female")!=TRUE
male <- any(gendertest$gender=="male")!=TRUE
orgnization <- any(gendertest$gender=="org")!=TRUE
f <- c("female",0)
m <- c("male",0)
o <- c("org",0)
if(female){
gendertest <- rbind(f,gendertest)
}
if(male){
gendertest <- rbind(gendertest,m)
}
if(org == FALSE){
gender <- dplyr::filter(gendertest,gender == "female"|gender == "male")
}else{
if(orgnization){
gender <- rbind(gendertest,o)
}
}
gender
}
get_nobel_gender(c = "physics")
get_nobel_info(c = physics)$gender
get_nobel_info(c = "physics")$gender
get_nobel_gender(y = "2019",org = FALSE)
get_nobel_gender(y = "2018",org = FALSE)
get_nobel_info(y = "2012")$gender
get_nobel_gender(c = "physics",org = FALSE)
get_nobel_gender(y = "2018")
get_nobel_gender <- function(y = NULL, c = NULL, org = TRUE){
gendertest <- get_nobel_info(y, c)%>%
dplyr::count(gender)%>%
na.omit()
female <- any(gendertest$gender=="female")!=TRUE
male <- any(gendertest$gender=="male")!=TRUE
orgnization <- any(gendertest$gender=="org")!=TRUE
f <- c("female",0)
m <- c("male",0)
o <- c("org",0)
if(female){
gendertest <- rbind(f,gendertest)
}
if(male){
gendertest <- rbind(gendertest,m)
}
if(org == FALSE){
gender <- dplyr::filter(gendertest,gender == "female"|gender == "male")
}else{
if(orgnization){
gender <- rbind(gendertest,o)
}
}
gender
}
get_nobel_gender(c = "physics")
get_nobel_gender()
get_nobel_gender <- function(y = NULL, c = NULL, org = TRUE){
gendertest <- get_nobel_info(y, c)%>%
dplyr::count(gender)%>%
na.omit()
female <- any(gendertest$gender=="female")!=TRUE
male <- any(gendertest$gender=="male")!=TRUE
orgnization <- any(gendertest$gender=="org")!=TRUE
f <- c("female",0)
m <- c("male",0)
o <- c("org",0)
if(female){
gendertest <- rbind(f,gendertest)
}
if(male){
gendertest <- rbind(gendertest,m)
}
if(org == FALSE){
gender <- dplyr::filter(gendertest,gender == "female"|gender == "male")
}else{
if(orgnization){
gender <- rbind(gendertest,o)
}
}
gender
}
get_nobel_gender()
get_nobel_gender(y = "2018", org = FALSE)
get_nobel_gender(c = "physics")
get_nobel_gender <- function(y = NULL, c = NULL, org = TRUE){
gendertest <- get_nobel_info(y, c)%>%
dplyr::count(gender)%>%
na.omit()
female <- any(gendertest$gender=="female")!=TRUE
male <- any(gendertest$gender=="male")!=TRUE
orgnization <- any(gendertest$gender=="org")!=TRUE
f <- c("female",0)
m <- c("male",0)
o <- c("org",0)
if(female){
gendertest <- rbind(f,gendertest)
}
if(male){
gendertest <- rbind(gendertest,m)
}
if(org == FALSE){
gender <- dplyr::filter(gendertest,gender == "female"|gender == "male")
}else{
if(orgnization){
gender <- rbind(gendertest,o)
}
}
gender
}
get_nobel_info()
count(get_nobel_info(),gender)
get_nobel_gender()
get_nobel_gender(org = FALSE)
get_nobel_gender(org = TRUE)
gendertest <- get_nobel_info()%>%
dplyr::count(gender)%>%
na.omit()
orgnization <- any(gendertest$gender=="org")!=TRUE
o <- c("org",0)
if(orgnization){
gender <- rbind(gendertest,o)
}
gender
gendertest <- get_nobel_info()%>%
dplyr::count(gender)%>%
na.omit()
orgnization <- any(gendertest$gender=="org")!=TRUE
o <- c("org",0)
if(orgnization){
gender <- rbind(gendertest,o)
}
gender
gendertest <- get_nobel_info()%>%
dplyr::count(gender)%>%
na.omit()
orgnization <- any(gendertest$gender=="org")!=TRUE
o <- c("org",0)
gender <- rbind(gendertest,o)
gender
get_nobel_gender <- function(y = NULL, c = NULL, org = TRUE){
gendertest <- get_nobel_info(y, c)%>%
dplyr::count(gender)%>%
na.omit()
female <- any(gendertest$gender=="female")!=TRUE
male <- any(gendertest$gender=="male")!=TRUE
orgnization <- any(gendertest$gender=="org")!=TRUE
f <- c("female",0)
m <- c("male",0)
o <- c("org",0)
if(female){
gendertest <- rbind(f,gendertest)
}
if(male){
gendertest <- rbind(gendertest,m)
}
if(org == FALSE){
gender <- dplyr::filter(gendertest,gender == "female"|gender == "male")
}else{
if(orgnization){
gender <- rbind(gendertest,o)
}
gender <- gender
}
gender
}
get_nobel_gender()
get_nobel_gender <- function(y = NULL, c = NULL, org = TRUE){
gendertest <- get_nobel_info(y, c)%>%
dplyr::count(gender)%>%
na.omit()
female <- any(gendertest$gender=="female")!=TRUE
male <- any(gendertest$gender=="male")!=TRUE
orgnization <- any(gendertest$gender=="org")!=TRUE
f <- c("female",0)
m <- c("male",0)
o <- c("org",0)
if(female){
gendertest <- rbind(f,gendertest)
}
if(male){
gendertest <- rbind(gendertest,m)
}
if(org == FALSE){
gender <- dplyr::filter(gendertest,gender == "female"|gender == "male")
}else{
if(orgnization){
gender <- rbind(gendertest,o)
}else{
gender <- gendertest
}
gender <- gender
}
gender
}
get_nobel_gender()
get_nobel_gender(org = FALSE)
get_nobel_gender(y = "2018")
get_nobel_gender(c = "physics")
library(devtools)
library(roxygen2)
document()
check()
use_package(stats)
use_package("stats")
library(nobel)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(nobel)
use_package()
library(devtools)
use_package()
utils::globalVariables("gender")
document
check()
check()
check()
load_all
library(nobel)
get_nobel_age(c = "physics")
get_nobel_age(c = "physics")%>%
select(year,age)
library(nobel)
library(dpylr)
library(nobel)
library(dplyr)
get_nobel_age(c = "physics")%>%
select(year,age)
library(nobel)
library(dplyr)
library(ggplot2)
physics_age <- get_nobel_age(c = "physics")%>%
select(year,age)
ggplot(physics_age,aes(x = year, y = age))+geom_line
physics_age <- get_nobel_age(c = "physics")%>%
select(year,age)
ggplot(physics_age,aes(x = year, y = age, group = l))+geom_line
ggplot(data = physics_age, aes(x = year, y = age, group = l))+geom_line
ggplot(data = physics_age, aes(x = year, y = age, group = l))+
geom_line
ggplot(data = physics_age, aes(x = year, y = age, group = l))+
geom_line()
ggplot(data = physics_age, aes(x = year, y = age, group = 1))+
geom_line()
ggplot(data = physics_age, aes(x = year, y = age))+
geom_smooth(method='lm',formula = physics_age$age~physics_age$year)
ggplot(data = physics_age, aes(x = year, y = age, group = 1))+
geom_line()
ggplot(data = physics_age, aes(x = year, y = age, group = 1))+
geom_line()+
scale_x_discrete(breaks=seq(1901,2020,10))
ggplot(data = physics_age, aes(x = year, y = age, group = 1))+
geom_line()+
scale_x_discrete(breaks=seq(1901,2020,10))+
geom_smooth()
ggplot(data = physics_age, aes(x = year, y = age, group = 1))+
geom_line()+
scale_x_discrete(breaks=seq(1901,2020,10))+
geom_smooth()
ggplot(data = physics_age, aes(x = year, y = age, group = 1))+
scale_x_discrete(breaks=seq(1901,2020,10))+
geom_smooth()
physics_age <- get_nobel_age(c = c("physics","economics"))%>%
select(category,year,age)
ggplot(data = physics_age, aes(x = year, y = age, group = category))+
scale_x_discrete(breaks=seq(1901,2020,10))+
geom_smooth()
ggplot(data = physics_age, aes(x = year, y = age, group = category,color = category))+
scale_x_discrete(breaks=seq(1901,2020,10))+
geom_smooth()
physics_age <- get_nobel_age(c = c("physics","chemistry"))%>%
select(category,year,age)
ggplot(data = physics_age, aes(x = year, y = age, group = category,color = category))+
scale_x_discrete(breaks=seq(1901,2020,10))+
geom_smooth()
physics_age <- get_nobel_age(c = c("physics","chemistry","literature"))%>%
select(category,year,age)
physics_age <- get_nobel_age(c = c("physics","chemistry","medicine"))%>%
select(category,year,age)
physics_age <- get_nobel_age(c = c("physics","chemistry"))%>%
select(category,year,age)
ggplot(data = physics_age, aes(x = year, y = age, group = category,color = category))+
geom_line()+
scale_x_discrete(breaks=seq(1901,2020,10))+
geom_smooth()
ggplot(data = physics_age, aes(x = year, y = age, group = category,color = category))
scale_x_discrete(breaks=seq(1901,2020,10))+
geom_smooth()
ggplot(data = physics_age, aes(x = year, y = age, group = category,color = category))+
scale_x_discrete(breaks=seq(1901,2020,10))+
geom_smooth()
ggplot(data = physics_age, aes(x = year, y = age, group = category,color = category))+
scale_x_discrete(breaks=seq(1901,2020,10))+
geom_smooth()
get_nobel_gender(c = "physics", org = FALSE)
compare_age <- get_nobel_age(c = c("physics","chemistry"))%>%
select(category,year,age)
document()
load_all()
?get_nobel_age()
?get_nobel_gender()
?get_nobel_info()
install.packages("nobel")
install.packages("nobel")
library(devtools)
library(roxygen2)
check()
use_testthat()
?expect_is
result <- get_nobel_info(y = "2012")
load_all()
result <- get_nobel_info(y = "2012")
result <- get_nobel_age(y = "2012")
class(result)
result <- get_nobel_country(y = "2012")
class(result)
expect_is(get_nobel_country(),"data.frame")
document()
class("y")
typeof("y")
get_nobel_info <- function(y = NULL, c = NULL){
#get data from api
nobel_laureate <- "http://api.nobelprize.org/v1/laureate.json"
get_nobel <- httr::GET(nobel_laureate)
laureate_info <- nobel_laureate %>%
httr::GET()%>%
httr::content(as = "text")%>%
jsonlite::fromJSON(simplifyDataFrame = TRUE) %>%
.[["laureates"]]
#check status
if(httr::http_status(get_nobel)$message != "Success: (200) OK"){
stop("errors")
}
#clean data
laureate <- laureate_info %>%
dplyr::as_tibble()%>%
tidyr::unnest(cols = c(prizes))%>%
dplyr::select(id,firstname,surname,born,bornCountry,gender,year,category,share,motivation)%>%
tidyr::unite(fullname, firstname,surname,sep = " ") %>%
dplyr::mutate(country = stringr::str_replace_all(bornCountry,"\\(|\\)",""))
#only use the country that exists now
laureate$born_country <- ifelse(stringr::str_detect(laureate$country,".*now.*")==TRUE,stringr::str_replace_all(laureate$country, ".*now",""), laureate$country)
laureate <- laureate %>%
dplyr::select(id,fullname,born,born_country,gender,year,category,share,motivation)
#get final info by year or category
if(is.null(y)&is.null(c)){
laureate
}else if(is.null(y)&!(is.null(c))){
if(class(c)!="character"){
return("Please put a character!")
}
dplyr::filter(laureate, category == c)
}else if(is.null(c)&!(is.null(y))){
dplyr::filter(laureate, year == y)
}else{
dplyr::filter(laureate, year == y, category == c)
}
}
get_nobel_info(c = physics)
library(devtools)
check()
